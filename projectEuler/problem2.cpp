/*
Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will
be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.  */

#include <iostream>
#include <stdlib.h>

int next_fib( )
{
  static int s0 = 0, s1 = 1;

  int ret = s0 + s1;
  s0 = s1;
  s1 = ret;
  return ret;
}

int main( int argc, char* argv[] )
{
  if ( argc < 2 ){
    std::cout << argv[0] << " M" << std::endl
	      << " prints the sum of even valued terms whose values are less than M" << std::endl;
    return 1;
  }

  int M = atoi(argv[1]);
  unsigned long long s = 0.0;
  int x = next_fib();
  while ( x <= M )
    {
      if ( 0 == x%2 )
	{
	  s += x;
	}
      x = next_fib();
    }
  std::cout << "total evens = " << s << std::endl;
  return 0;
}
